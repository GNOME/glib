stages:
  - style-check
  - build
  - coverage
  - analysis
  - deploy

cache:
  paths:
    - _ccache/

variables:
  MESON_TEST_TIMEOUT_MULTIPLIER: 2
  G_MESSAGES_DEBUG: all
  MESON_COMMON_OPTIONS: "--buildtype debug --fatal-meson-warnings"

.only-default:
  only:
    - branches
  except:
    - tags

style-check-diff:
  extends: .only-default
  image: registry.gitlab.gnome.org/gnome/glib/debian-stable:v5
  stage: style-check
  allow_failure: true
  script:
    - .gitlab-ci/run-style-check-diff.sh

fedora-x86_64:
  extends: .only-default
  image: registry.gitlab.gnome.org/gnome/glib/fedora:v5
  stage: build
  variables:
    CFLAGS: "-coverage -ftest-coverage -fprofile-arcs"
  script:
    - meson ${MESON_COMMON_OPTIONS}
            --werror
            --default-library=both
            --prefix=$HOME/glib-installed
            --libdir=lib
            -Dsystemtap=true
            -Ddtrace=true
            -Dfam=true
            -Dinstalled_tests=true
            _build
    - ninja -C _build
    - mkdir -p _coverage
    - lcov --config-file .gitlab-ci/lcovrc --directory _build --capture --initial --output-file "_coverage/${CI_JOB_NAME}-baseline.lcov"
    - .gitlab-ci/run-tests.sh
    - lcov --config-file .gitlab-ci/lcovrc --directory _build --capture --output-file "_coverage/${CI_JOB_NAME}.lcov"
  artifacts:
    reports:
      junit: "_build/${CI_JOB_NAME}-report.xml"
    name: "glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/config.h"
      - "_build/glib/glibconfig.h"
      - "_build/meson-logs"
      - "_build/${CI_JOB_NAME}-report.xml"
      - "_coverage"

debian-stable-x86_64:
  extends: .only-default
  image: registry.gitlab.gnome.org/gnome/glib/debian-stable:v5
  stage: build
  script:
    - meson ${MESON_COMMON_OPTIONS}
            --werror
            --default-library=both
            --prefix=$HOME/glib-installed
            --libdir=lib
            -Dsystemtap=true
            -Ddtrace=true
            -Dfam=true
            -Dinstalled_tests=true
            _build
    - ninja -C _build
    - .gitlab-ci/run-tests.sh
  artifacts:
    reports:
      junit: "_build/${CI_JOB_NAME}-report.xml"
    name: "glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/config.h"
      - "_build/glib/glibconfig.h"
      - "_build/meson-logs"
      - "_build/${CI_JOB_NAME}-report.xml"

installed-tests:
  extends: .only-default
  image: registry.gitlab.gnome.org/gnome/glib/fedora:v5
  stage: build
  before_script:
    # FIXME move to docker image
    - sudo dnf install -y gnome-desktop-testing python3-dbusmock xdg-desktop-portal
  script:
    # FIXME Install xdg-desktop-portal build deps before compiling glib,
    # so it doesn't overwrite our own glib build
    - sudo dnf install -y autoconf automake gettext-devel libtool diffutils fontconfig-devel json-glib-devel geoclue2-devel pipewire-devel fuse-devel make
    # dtrace is disabled because it breaks the static-link.py test
    - meson ${MESON_COMMON_OPTIONS}
            --werror
            --prefix=/usr --libdir=/usr/lib64
            -Dfam=true
            -Dinstalled_tests=true
            -Ddefault_library=both
            -Ddtrace=false
            _build
    - ninja -C _build
    - sudo ninja -C _build install
    - sudo chown -R `id -un`:`id -gn` _build/
    # FIXME Install newer xdg-desktop-portal with
    # GMemoryMonitor support, see:
    # https://github.com/flatpak/xdg-desktop-portal/pull/365
    - git clone --single-branch https://github.com/flatpak/xdg-desktop-portal.git
    - cd xdg-desktop-portal
    - ./autogen.sh --prefix=/usr --libdir=/usr/lib64 --disable-libportal --disable-dependency-tracking && make && sudo make install
    - cd ..
    # FIXME install newer gobject-introspection
    # with GMemoryMonitor support, see:
    # https://gitlab.gnome.org/GNOME/gobject-introspection/merge_requests/193
    - sudo dnf install -y meson flex bison python3-devel
    - git clone --single-branch https://gitlab.gnome.org/GNOME/gobject-introspection.git
    - cd gobject-introspection
    - /usr/bin/meson _build --prefix=/usr --libdir=/usr/lib64
    - ninja -C _build
    - sudo ninja -C _build install
    - cd ..
    # FIXME: Add update until stable https://bodhi.fedoraproject.org/updates/FEDORA-2019-e830287661
    - sudo dnf upgrade -y --enablerepo=updates-testing --advisory=FEDORA-2019-e830287661
    # FIXME: Add update until stable https://bodhi.fedoraproject.org/updates/FEDORA-2019-161b129d4d
    - sudo dnf upgrade -y --enablerepo=updates-testing --advisory=FEDORA-2019-161b129d4d
    # Work-around https://gitlab.gnome.org/GNOME/gnome-desktop-testing/merge_requests/2
    - mkdir -p _build/installed-tests-report/logs/
    - GLIB_TEST_COMPILATION=1 gnome-desktop-testing-runner
            --report-directory=_build/installed-tests-report/failed/
            --log-directory=_build/installed-tests-report/logs/
            glib
  artifacts:
    name: "glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/config.h"
      - "_build/glib/glibconfig.h"
      - "_build/meson-logs"
      - "_build/installed-tests-report/"

G_DISABLE_ASSERT:
  extends: .only-default
  image: registry.gitlab.gnome.org/gnome/glib/fedora:v5
  stage: build
  variables:
    CPPFLAGS: "-DG_DISABLE_ASSERT"
  script:
    - meson ${MESON_COMMON_OPTIONS}
            --werror
            -Dsystemtap=true
            -Ddtrace=true
            -Dfam=true
            -Dinstalled_tests=true
            _build
    - ninja -C _build
    - bash -x ./.gitlab-ci/run-tests.sh
  artifacts:
    reports:
      junit: "_build/${CI_JOB_NAME}-report.xml"
    name: "glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/config.h"
      - "_build/glib/glibconfig.h"
      - "_build/meson-logs"
      - "_build/${CI_JOB_NAME}-report.xml"

valgrind:
  extends: .only-default
  image: registry.gitlab.gnome.org/gnome/glib/fedora:v5
  stage: analysis
  variables:
    MESON_TEST_TIMEOUT_MULTIPLIER: 10
  script:
    - meson ${MESON_COMMON_OPTIONS}
            --werror
            -Dsystemtap=true
            -Ddtrace=true
            -Dfam=true
            -Dinstalled_tests=true
            _build
    - ninja -C _build
    - bash -x ./.gitlab-ci/run-tests.sh
                 --log-file _build/meson-logs/testlog-valgrind.json
                 --wrap "valgrind --tool=memcheck --error-exitcode=1 --track-origins=yes --leak-check=full --leak-resolution=high --num-callers=50 --show-leak-kinds=definite,possible --show-error-list=yes --suppressions=${CI_PROJECT_DIR}/glib.supp"
                 --no-suite no-valgrind
                 --no-suite slow
  # FIXME: Remove this when we have zero valgrind leaks.
  # https://gitlab.gnome.org/GNOME/glib/issues/333
  allow_failure: true
  artifacts:
    reports:
      junit: "_build/${CI_JOB_NAME}-report.xml"
    name: "glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/config.h"
      - "_build/glib/glibconfig.h"
      - "_build/meson-logs"

.cross-template: &cross-template
  extends: .only-default
  stage: build
  artifacts:
    name: "glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/meson-logs"

cross-android_api21_arm64:
  <<: *cross-template
  image: registry.gitlab.gnome.org/gnome/glib/android-ndk:v1
  script:
    # FIXME: add --werror
    # We use -Diconv=auto to test that we successfully detect that iconv is not
    # provided by android api 21, and detect the external iconv instead.
    - meson ${MESON_COMMON_OPTIONS} --cross-file=/opt/cross_file_android_arm64_21.txt -Diconv=auto -Dinternal_pcre=true _build
    - ninja -C _build

cross-android_api28_arm64:
  <<: *cross-template
  image: registry.gitlab.gnome.org/gnome/glib/android-ndk:v1
  script:
    # FIXME: add --werror
    - meson ${MESON_COMMON_OPTIONS} --cross-file=/opt/cross_file_android_arm64_28.txt -Dinternal_pcre=true _build
    - ninja -C _build

cross-mingw64:
  <<: *cross-template
  image: registry.gitlab.gnome.org/gnome/glib/mingw:v1
  script:
    # FIXME: Add --werror
    - meson ${MESON_COMMON_OPTIONS} --cross-file=/opt/cross_file_mingw64.txt _build
    - ninja -C _build

msys2-mingw32:
  extends: .only-default
  stage: build
  tags:
    - win32
  variables:
    MSYSTEM: "MINGW32"
    CHERE_INVOKING: "yes"
  script:
    - C:\msys64\usr\bin\pacman --noconfirm -Syyuu --ask 20
    - C:\msys64\usr\bin\bash -lc "bash -x ./.gitlab-ci/test-msys2.sh"
  artifacts:
    reports:
      junit: "_build/%CI_JOB_NAME%-report.xml"
    name: "glib-%CI_JOB_NAME%-%CI_COMMIT_REF_NAME%"
    when: always
    paths:
      - _build/meson-logs
      - "_build/%CI_JOB_NAME%-report.xml"
      - _coverage/

vs2017-x64:
  extends: .only-default
  stage: build
  tags:
    - win32
  script:
    - .gitlab-ci/test-msvc.bat
  artifacts:
    reports:
      junit: "_build/%CI_JOB_NAME%-report.xml"
    name: "glib-%CI_JOB_NAME%-%CI_COMMIT_REF_NAME%"
    when: always
    paths:
      - _build/meson-logs
      - "_build/%CI_JOB_NAME%-report.xml"

freebsd-11-x86_64:
  stage: build
  only:
    - branches@GNOME/glib
  tags:
    # To run a FreeBSD builder, install gitlab-runner package and start both
    # gitlab-runner and dbus service because we need /var/lib/dbus/machine-id.
    # To compile GLib, you still have to install the following packages:
    # desktop-file-utils gettext libiconv meson pkgconf python3 shared-mime-info
    - freebsd-11
  variables:
    # CPPFLAGS is required because libintl doesn't use pkg-config.
    CPPFLAGS: -I/usr/local/include
    # FIXME: Workaround meson inability to set LD_LIBRARY_PATH.
    # https://github.com/mesonbuild/meson/issues/1383
    # https://github.com/mesonbuild/meson/issues/1635
    # https://github.com/mesonbuild/meson/issues/2881
    LDFLAGS: -L/usr/local/lib -Wl,--disable-new-dtags
    # FreeBSD doesn't have C.UTF-8 locale.
    LANG: en_US.UTF-8
  script:
    # We cannot use -Wl,--no-undefined because GLib uses 'environ' variable.
    # FreeBSD iconv doesn't handle transliteration, so we use (external) GNU libiconv here.
    # FreeBSD supports xattr, but its API is different from Linux xattr.
    # FIXME: extattr(2) support: https://gitlab.gnome.org/GNOME/glib/issues/1404
    - meson ${MESON_COMMON_OPTIONS} -Db_lundef=false -Diconv=external -Dxattr=false _build
    - ninja -C _build
    - bash -x ./.gitlab-ci/run-tests.sh
  artifacts:
    reports:
      junit: "_build/${CI_JOB_NAME}-report.xml"
    name: "glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/config.h"
      - "_build/glib/glibconfig.h"
      - "_build/meson-logs"
      - "_build/${CI_JOB_NAME}-report.xml"

freebsd-12-x86_64:
  stage: build
  only:
    - branches@GNOME/glib
  tags:
    - freebsd-12
  variables:
    CPPFLAGS: -I/usr/local/include
    LDFLAGS: -L/usr/local/lib -Wl,--disable-new-dtags
    LANG: en_US.UTF-8
  script:
    - meson ${MESON_COMMON_OPTIONS} -Db_lundef=false -Diconv=external -Dxattr=false _build
    - ninja -C _build
    - bash -x ./.gitlab-ci/run-tests.sh
  except:
    - tags
  artifacts:
    reports:
      junit: "_build/${CI_JOB_NAME}-report.xml"
    name: "glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_build/config.h"
      - "_build/glib/glibconfig.h"
      - "_build/meson-logs"
      - "_build/${CI_JOB_NAME}-report.xml"

coverage:
  extends: .only-default
  image: registry.gitlab.gnome.org/gnome/glib/fedora:v5
  stage: coverage
  artifacts:
    name: "glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    paths:
      - _coverage/
  script:
    - bash -x ./.gitlab-ci/coverage-docker.sh
  coverage: '/^\s+lines\.+:\s+([\d.]+\%)\s+/'

scan-build:
  extends: .only-default
  image: registry.gitlab.gnome.org/gnome/glib/fedora:v5
  stage: analysis
  script:
    - meson ${MESON_COMMON_OPTIONS}
            --werror
            --default-library=both
            --prefix=$HOME/glib-installed
            --libdir=lib
            -Dsystemtap=true
            -Ddtrace=true
            -Dfam=true
            -Dinstalled_tests=true
            _scan_build
    - ninja -C _scan_build scan-build
  artifacts:
    name: "glib-${CI_JOB_NAME}-${CI_COMMIT_REF_NAME}"
    when: always
    paths:
      - "_scan_build/meson-logs/scanbuild"

pages:
  stage: deploy
  only:
    - master
  script:
    - mv _coverage/ public/
  artifacts:
    paths:
      - public

dist-job:
  image: registry.gitlab.gnome.org/gnome/glib/fedora:v5
  stage: build
  only:
    - tags
  script:
    - meson --buildtype release --fatal-meson-warnings -Dgtk_doc=true -Dman=true _build
    - cd _build
    - ninja dist
    - ninja glib-doc gobject-doc gio-doc
    - tar -c -f "glib-docs-$CI_COMMIT_TAG.tar.xz" -C docs/reference/glib html
    - tar -c -f "gobject-docs-$CI_COMMIT_TAG.tar.xz" -C docs/reference/gobject html
    - tar -c -f "gio-docs-$CI_COMMIT_TAG.tar.xz" -C docs/reference/gio html
  artifacts:
    paths:
      - "${CI_PROJECT_DIR}/_build/glib-docs.tar.xz"
      - "${CI_PROJECT_DIR}/_build/gobject-docs.tar.xz"
      - "${CI_PROJECT_DIR}/_build/gio-docs.tar.xz"
      - "${CI_PROJECT_DIR}/_build/meson-dist/glib-*.tar.xz"
