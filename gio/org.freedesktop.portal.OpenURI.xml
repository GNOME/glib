<?xml version="1.0"?>
<!--
 Copyright (C) 2016 Red Hat, Inc.

 SPDX-License-Identifier: LGPL-2.1-or-later

 This library is free software; you can redistribute it and/or
 modify it under the terms of the GNU Lesser General Public
 License as published by the Free Software Foundation; either
 version 2.1 of the License, or (at your option) any later version.

 This library is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
 Lesser General Public License for more details.

 You should have received a copy of the GNU Lesser General Public
 License along with this library. If not, see <http://www.gnu.org/licenses/>.

 Author: Matthias Clasen <mclasen@redhat.com>
-->

<node name="/" xmlns:doc="http://www.freedesktop.org/dbus/1.0/doc.dtd">
  <!--
       org.freedesktop.portal.OpenURI:
       @short_description: Portal for opening URIs

       The OpenURI portal allows sandboxed applications to open
       URIs (e.g. a http: link to the applications homepage)
       under the control of the user.

       This documentation describes version 5 of this interface.
  -->
  <interface name="org.freedesktop.portal.OpenURI">
    <!--
        OpenURI:
        @parent_window: Identifier for the application window, see :doc:`window-identifiers`
        @uri: The uri to open
        @options: Vardict with optional further information
        @handle: Object path for the :ref:`org.freedesktop.portal.Request` object representing this call

        Asks to open a URI.

        Note that ``file://`` URIs are explicitly not supported by this method.
        To request opening local files, use org.freedesktop.portal.OpenURI.OpenFile().

        Supported keys in the @options vardict include:

        * ``handle_token`` (``s``)

          A string that will be used as the last element of the @handle. Must be a valid
          object path element. See the :ref:`org.freedesktop.portal.Request` documentation for
          more information about the @handle.

        * ``writable`` (``b``)

          Whether to allow the chosen application to write to the file.

          This key only takes effect the uri points to a local file that
          is exported in the document portal, and the chosen application
          is sandboxed itself.

        * ``ask`` (``b``)

          Whether to ask the user to choose an app. If this is not passed, or false,
          the portal may use a default or pick the last choice.

          The ask option was introduced in version 3 of the interface.

        * ``activation_token`` (``s``)

          A token that can be used to activate the chosen application.

          The activation_token option was introduced in version 4 of the interface.
    -->
    <method name="OpenURI">
      <arg type="s" name="parent_window" direction="in"/>
      <arg type="s" name="uri" direction="in"/>
      <annotation name="org.qtproject.QtDBus.QtTypeName.In2" value="QVariantMap"/>
      <arg type="a{sv}" name="options" direction="in"/>
      <arg type="o" name="handle" direction="out"/>
    </method>

    <!--
        OpenFile:
        @parent_window: Identifier for the application window, see :doc:`window-identifiers`
        @fd: File descriptor for the file to open
        @options: Vardict with optional further information
        @handle: Object path for the :ref:`org.freedesktop.portal.Request` object representing this call

        Asks to open a local file.

        Supported keys in the @options vardict include:

        * ``handle_token`` (``s``)

          A string that will be used as the last element of the @handle. Must be a valid
          object path element. See the :ref:`org.freedesktop.portal.Request` documentation for
          more information about the @handle.

        * ``writable`` (``b``)

          Whether to allow the chosen application to write to the file.

          This key only takes effect the uri points to a local file that is
          exported in the document portal, and the chosen application is
          sandboxed itself.

        * ``ask`` (``b``)

          Whether to ask the user to choose an app. If this is not passed, or false,
          the portal may use a default or pick the last choice.

          The ask option was introduced in version 3 of the interface.

        * ``activation_token`` (``s``)

          A token that can be used to activate the chosen application.

          The activation_token option was introduced in version 4 of the interface.

        The OpenFile method was introduced in version 2 of the OpenURI portal API.
    -->
    <method name="OpenFile">
      <annotation name="org.gtk.GDBus.C.UnixFD" value="true"/>
      <arg type="s" name="parent_window" direction="in"/>
      <arg type="h" name="fd" direction="in"/>
      <annotation name="org.qtproject.QtDBus.QtTypeName.In2" value="QVariantMap"/>
      <arg type="a{sv}" name="options" direction="in"/>
      <arg type="o" name="handle" direction="out"/>
    </method>

    <!--
        OpenDirectory:
        @parent_window: Identifier for the application window, see :doc:`window-identifiers`
        @fd: File descriptor for a file
        @options: Vardict with optional further information
        @handle: Object path for the :ref:`org.freedesktop.portal.Request` object representing this call

        Asks to open the directory containing a local file in the file browser. This is implemented using
        the ``org.freedesktop.FileManager1.ShowItems()`` D-Bus API and if that service doesn't exist falls back
        to the ``OpenURI`` method on the directory of the file.

        Supported keys in the @options vardict include:

        * ``handle_token`` (``s``)

          A string that will be used as the last element of the @handle. Must be a valid
          object path element. See the :ref:`org.freedesktop.portal.Request` documentation for
          more information about the @handle.

        * ``activation_token`` (``s``)

          A token that can be used to activate the chosen application.

          The activation_token option was introduced in version 4 of the interface.

        The OpenDirectory method was introduced in version 3 of the OpenURI portal API.
    -->
    <method name="OpenDirectory">
      <annotation name="org.gtk.GDBus.C.UnixFD" value="true"/>
      <arg type="s" name="parent_window" direction="in"/>
      <arg type="h" name="fd" direction="in"/>
      <annotation name="org.qtproject.QtDBus.QtTypeName.In2" value="QVariantMap"/>
      <arg type="a{sv}" name="options" direction="in"/>
      <arg type="o" name="handle" direction="out"/>
    </method>

    <!--
        SchemeSupported:
        @scheme: The URI protocol scheme to check
        @options: Vardict with optional further information
        @supported: True if the URI scheme is supported

        Checks if OpenURI supports the protocol scheme @scheme.

        The @options vardict currently has no supported entries.

        The SchemeSupported method was introduced in version 5 of the OpenURI portal API.
    -->
    <method name="SchemeSupported">
      <arg type="s" name="scheme" direction="in"/>
      <annotation name="org.qtproject.QtDBus.QtTypeName.In1" value="QVariantMap"/>
      <arg type="a{sv}" name="options" direction="in"/>
      <arg type="b" name="supported" direction="out"/>
    </method>

    <property name="version" type="u" access="read"/>
  </interface>
</node>
